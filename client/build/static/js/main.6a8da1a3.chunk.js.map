{"version":3,"sources":["components/LinkButton.jsx","components/Footer.js","components/Home.js","components/Kits.js","components/Table.js","api/index.js","components/CreateOrEdit.js","components/Error.js","components/PrivateRoute.js","components/Login.js","components/Invalid.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","history","to","location","match","staticContext","onClick","kit","rest","event","push","Footer","className","currComponent","goBack","loggedIn","rowCount","clearTable","window","print","Home","id","href","target","rel","allSpecies","map","species","selectSpecies","key","Kits","generatePosKitSection","generatePosKitsBool","kitArray","kitCollection","currentPosKits","currentNegKits","sort","a","b","aName","name","toUpperCase","bName","updateTable","tableData","samples","length","currentSpecies","Table","generateSampleRows","row","idx","sampleRow","rowIdx","cells","forEach","cell","onChange","e","handleTableInput","value","onKeyPress","charCode","preventDefault","generateSampleCells","speciesTables","speciesGroup","handleTableDeleteButton","speciesKits","kitsTables","kitID","colSpan","constants","type","constant","generateKitTables","generateSpeciesTables","baseURL","process","trim","undefined","api","axios","create","withCredentials","apis","createKit","kitData","post","updateKitById","put","deleteKitById","delete","getAllKits","get","getKitByID","logIn","loginData","checkLoginStatus","logOut","CreateOrEdit","componentDidMount","params","loadKitToEdit","loadSavedCreateData","fetchKitByID","console","log","then","res","data","catch","err","error","state","setState","kitFromDb","updateLocalStorage","localForm","JSON","parse","localStorage","getItem","generateConstantsDatalists","memoize","allKits","constantNames","createUniqueElArr","constantUnits","constantCells","indexToUse","appendUnits","allConstantGroups","reduce","finalArray","set","Set","constantGroup","add","Array","from","handleInputConstant","constantRow","constantType","cloneDeep","values","split","slice","handleInput","allKitIDs","has","duplicateID","capitalizeWords","string","word","join","processFields","namePrepped","String","speciesPrepped","constantsPrepped","el","checkForEmptyFields","constantsEmpty","alertMsg","showAlert","validateFields","handleSubmit","updateOrCreate","updateTableData","fetchKitsFromDatabase","deleteKit","handleAlert","action","clearStateAndStorage","createOrUpdate","setItem","stringify","removeItem","modifyConstantRows","modification","typeRef","React","createRef","datalists","this","autoComplete","onSubmit","align","disabled","placeholder","list","onKeyDown","ref","onMouseDown","current","nameAndUnits","unit","Component","Error","PrivateRoute","PrivateComponent","component","path","render","Login","handleChange","password","passwordPlaceholder","username","response","status","setLoggedInStatus","Invalid","App","fetchLocalStorage","getUser","localState","responseData","allSpeciesSet","extractUniqueProps","prop","user","currentKits","filter","sortKits","positiveKits","negativeKits","addRowToTable","modifyRowCount","subtractRowFromTable","tableSpecies","speciesKit","Object","keys","assign","newSample","fill","kitSamples","pop","deleteKitFromTable","updatedKit","mod","updateKitInTable","sampleID","cellCount","calculateCells","inputType","input","i","currentConstant","constantCellDivisor","kitConstant","calculatedVol","calculateVolume","toLocaleString","useGrouping","finalVol","normalizeCellCount","toFixed","Math","ceil","normalizedCellCount","includes","speciesOrKit","deleteSpeciesFromTable","kits","bool","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6a8da1a3.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\n\nconst LinkButton = props => {\n  const {\n    history,\n    location,\n    match,\n    staticContext,\n    to,\n    onClick,\n    kit,\n    // ⬆ filtering out props that `button` doesn’t know what to do with.\n    ...rest\n  } = props;\n  return (\n    <button\n      {...rest} // `children` is just another prop!\n      onClick={event => {\n        onClick && onClick(event);\n        history.push(to, kit);\n      }}\n    />\n  );\n};\n\nLinkButton.propTypes = {\n  to: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\n\nexport default withRouter(LinkButton);\n\n//thanks to: https://stackoverflow.com/questions/42463263/wrapping-a-react-router-link-in-an-html-button\n//wrapping a button tag with a react Link or 'a' tag, or vice versa, is not valid HTML and can cause problems\n","//the Footer component is rendered at the bottom of each page, and renders buttons appropriate for the component.\nimport React from \"react\";\nimport LinkButton from \"./LinkButton.jsx\";\nimport \"./Footer.css\";\n\nconst Footer = (props) => {\n  return (\n    <div className=\"footer\">\n      {props.currComponent !== \"Home\" ? (\n        <button\n          className=\"nav-button back-button\"\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Back\n        </button>\n      ) : null}\n\n      {props.currComponent !== \"Home\" ? (\n        <LinkButton to=\"/\" className=\"nav-button home-button\">\n          Home\n        </LinkButton>\n      ) : null}\n\n      {props.currComponent === \"Home\" || props.currComponent === \"Kits\" ? (\n        <LinkButton\n          to=\"/create\"\n          className={\n            props.loggedIn\n              ? \"nav-button create-button-faded-in\"\n              : \"create-button-faded-out\"\n          }\n        >\n          Create Kit\n        </LinkButton>\n      ) : null}\n\n      {props.currComponent !== \"Table\" ? (\n        <LinkButton to=\"/table\" className=\"nav-button table-button\">\n          Table &#40;{props.rowCount}{\" \"}\n          {props.rowCount === 1 ? \"Sample\" : \"Samples\"}&#41;\n        </LinkButton>\n      ) : null}\n\n      {props.currComponent === \"Table\" ? (\n        <button\n          className=\"nav-button clear-table-button\"\n          onClick={() => {\n            props.clearTable();\n          }}\n        >\n          Clear Table\n        </button>\n      ) : null}\n\n      {props.currComponent === \"Table\" ? (\n        <button\n          className=\"nav-button print-button\"\n          onClick={() => {\n            window.print();\n          }}\n        >\n          Print\n        </button>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Footer;\n","//the Home component contains button links to different species' kits, a button to create a new kit, and a button link to the Table component, which also displays how many current kits are in the Table.\nimport React from \"react\";\nimport LinkButton from \"./LinkButton.jsx\";\nimport Footer from \"./Footer\";\nimport \"./Home.css\";\n\nconst Home = (props) => {\n  return (\n    <div className=\"page\">\n      <header>\n        <div className=\"page-title\" id=\"home-title\">\n          Secondary Isolation Calculator\n        </div>\n        <div className=\"home-subtitle\">\n          For{\" \"}\n          <a\n            className=\"miltenyi-link\"\n            href=\"https://www.miltenyibiotec.com/US-en/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Miltenyi Biotec\n          </a>{\" \"}\n          Kits\n        </div>\n      </header>\n      <div className=\"home-container-species-buttons scrollable-body\">\n        {props.allSpecies.map((species) => (\n          <LinkButton\n            to=\"/kits\"\n            className=\"species-button\"\n            onClick={() => props.selectSpecies(species)}\n            key={species}\n          >\n            {species}\n          </LinkButton>\n        ))}\n      </div>\n\n      <Footer {...props} currComponent={\"Home\"} />\n    </div>\n  );\n};\n\nexport default Home;\n","//the Kits component lists all positive & negative kits for the selected species, and allows user to modify the number of samples for each kit on the Table. if the user is logged in, a 'create kit' button is shown, as well as 'edit' buttons for each kit.\nimport React from \"react\";\nimport LinkButton from \"./LinkButton.jsx\";\nimport Footer from \"./Footer\";\nimport \"./Kits.css\";\n\nconst Kits = (props) => {\n  const sortKitsByName = (kitArray) => {\n    return kitArray.sort((a, b) => {\n      const aName = a.name.toUpperCase();\n      const bName = b.name.toUpperCase();\n      if (aName < bName) return -1;\n      if (aName > bName) return 1;\n      return 0;\n    });\n  };\n\n  const generatePosKitSection = (generatePosKitsBool) => {\n    const kitCollection = generatePosKitsBool\n      ? props.currentPosKits\n      : props.currentNegKits;\n\n    return (\n      <div\n        className={`kit-section section-${\n          generatePosKitsBool ? \"positive\" : \"negative\"\n        }-selection`}\n      >\n        <div className=\"kit-section-title\">\n          {generatePosKitsBool ? \"Positive\" : \"Negative\"} Selection\n        </div>\n        <div className=\"kit-section-list\">\n          {sortKitsByName(kitCollection).map((kit) => (\n            <div className=\"kit-info-container\" key={kit.id}>\n              <div className=\"kit-name-container\">\n                <div className=\"kit-name\">{kit.name}</div>\n\n                <div>\n                  <a\n                    className=\"kit-id\"\n                    href={`https://www.miltenyibiotec.com/US-en/search.html?search=${kit.id}&options=on#globalSearchFamilies=%5B%5D`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {kit.id}\n                  </a>\n                </div>\n              </div>\n              <div className=\"kit-info-container-right\">\n                <LinkButton\n                  to={`/edit/${kit.id}`}\n                  className={\n                    props.loggedIn\n                      ? \"edit-button\"\n                      : \"edit-button logged-out-edit-button\"\n                  }\n                  //attaches kit object to props.location.state, passing into CreateOrEdit\n                  kit={kit}\n                >\n                  <i className=\"fas fa-pen\"></i>\n                </LinkButton>\n\n                <div className=\"kit-options-row\">\n                  <button\n                    className=\"kit-options-button kit-remove-button subtract-button\"\n                    onClick={() => {\n                      props.updateTable(\"subtract\", kit);\n                    }}\n                  >\n                    <i className=\"fas fa-minus\"></i>\n                  </button>\n\n                  <div className=\"kit-count\">\n                    {(props.tableData[kit.species] &&\n                      props.tableData[kit.species][kit.id] &&\n                      props.tableData[kit.species][kit.id].samples.length) ||\n                      0}\n                  </div>\n\n                  <button\n                    className=\"kit-options-button kit-add-button add-button\"\n                    onClick={() => {\n                      props.updateTable(\"add\", kit);\n                    }}\n                  >\n                    <i className=\"fas fa-plus\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"page\">\n      <header>\n        <div className=\"page-title\">\n          {props.currentSpecies\n            ? `${props.currentSpecies} Kits`\n            : \"No Species Selected\"}\n        </div>\n      </header>\n      <div className=\"kits-body scrollable-body\">\n        {generatePosKitSection(true)}\n        {generatePosKitSection(false)}\n      </div>\n\n      <Footer {...props} currComponent={\"Kits\"} />\n    </div>\n  );\n};\n\nexport default Kits;\n","//the Table component displays all of the kits selected and allows the user to input sample IDs, cell counts to generate the corresponding constants, and modify the amount of samples. the Table can then be printed. if the user is logged in, 'edit' buttons are rendered on each kit.\nimport React from \"react\";\nimport LinkButton from \"./LinkButton.jsx\";\nimport Footer from \"./Footer\";\nimport \"./Table.css\";\n\nconst Table = (props) => {\n  const generateSampleCells = (sampleRow, kit, rowIdx) => {\n    const cells = [];\n    sampleRow.forEach((cell, idx) => {\n      if (idx === 0) {\n        cells.push(\n          <td className=\"medium-cell\" key={idx}>\n            <input\n              className=\"user-input medium-cell\"\n              onChange={(e) =>\n                props.handleTableInput(\"sampleID\", kit, rowIdx, e.target.value)\n              }\n              value={cell}\n            ></input>\n          </td>\n        );\n      } else if (idx === 1) {\n        cells.push(\n          <td className=\"short-cell\" key={idx}>\n            <input\n              className=\"user-input short-cell\"\n              // only allow numbers and decimals\n              onKeyPress={(e) => {\n                if ((e.charCode < 48 && e.charCode !== 46) || e.charCode > 57)\n                  e.preventDefault();\n              }}\n              onChange={(e) =>\n                props.handleTableInput(\"cellCount\", kit, rowIdx, e.target.value)\n              }\n              value={cell}\n            ></input>\n          </td>\n        );\n      } else {\n        cells.push(<td key={idx}>{cell}</td>);\n      }\n    });\n    return cells;\n  };\n\n  const generateSampleRows = (kit) => {\n    const sampleRows = kit.samples;\n    return sampleRows.map((row, idx) => (\n      <tr className=\"table-variables-row\" key={idx}>\n        {generateSampleCells(row, kit, idx)}\n      </tr>\n    ));\n  };\n\n  const generateKitTables = (speciesKits) => {\n    let kitsTables = [];\n    for (let kitID in speciesKits) {\n      const kit = speciesKits[kitID];\n      kitsTables.push(\n        <table className=\"kit-table\" key={kitID}>\n          <thead>\n            <tr>\n              <th\n                className=\"kit-table-header-container\"\n                colSpan={kit.constants.length + 2}\n              >\n                <div className=\"kit-table-header\">\n                  <div>\n                    <button\n                      className=\"kit-table-row-button add-button no-print\"\n                      onClick={() => props.updateTable(\"add\", kit)}\n                    >\n                      <i className=\"fas fa-plus\"></i>\n                    </button>\n                    <button\n                      className=\"kit-table-row-button subtract-button no-print\"\n                      onClick={() => props.updateTable(\"subtract\", kit)}\n                    >\n                      <i className=\"fas fa-minus\"></i>\n                    </button>\n                  </div>\n\n                  <div className=\"kit-table-header-text-container\">\n                    <div className=\"kit-table-header-name\">\n                      {kit.name}:{\" \"}\n                      <a\n                        className=\"kit-table-header-id\"\n                        href={`https://www.miltenyibiotec.com/US-en/search.html?search=${kit.id}&options=on#globalSearchFamilies=%5B%5D`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {kit.id}\n                      </a>\n                    </div>\n\n                    <div className=\"kit-table-header-selection\">\n                      ({kit.type} Selection)\n                    </div>\n                  </div>\n                  <div>\n                    <LinkButton\n                      to={`/edit/${kit.id}`}\n                      className={\n                        props.loggedIn\n                          ? \"edit-button no-print\"\n                          : \"edit-button logged-out-edit-button\"\n                      }\n                      //attaches kit object to props.location.state\n                      kit={kit}\n                    >\n                      <i className=\"fas fa-pen\"></i>\n                    </LinkButton>\n                    <button\n                      className=\"delete-button delete-kit no-print\"\n                      onClick={() =>\n                        props.handleTableDeleteButton(\n                          \"kit\",\n                          kit.species,\n                          kit.id\n                        )\n                      }\n                    >\n                      <i className=\"fas fa-trash-alt\"></i>\n                    </button>\n                  </div>\n                </div>\n              </th>\n            </tr>\n\n            <tr className=\"kit-multipliers-row no-print\">\n              <th className=\"kit-constants-title\" colSpan={2}>\n                Constants:\n              </th>\n              {/* using idx for the keys because constants can repeat */}\n              {kit.constants.map((constant, idx) => (\n                <th key={idx}>{constant[2]}</th>\n              ))}\n            </tr>\n\n            <tr className=\"kit-constant-names-row\">\n              <th className=\"medium-cell\">Sample ID</th>\n              <th className=\"short-cell superscript-cell\">\n                Cell Count (10<sup>6</sup>)\n              </th>\n              {/* using idx for the keys because constants can repeat */}\n              {kit.constants.map((constant, idx) => (\n                <th key={idx}>{constant[0] + \" (\" + constant[1] + \")\"}</th>\n              ))}\n            </tr>\n          </thead>\n\n          <tbody>{generateSampleRows(kit)}</tbody>\n        </table>\n      );\n    }\n    return kitsTables;\n  };\n\n  const generateSpeciesTables = () => {\n    let speciesTables = [];\n    const tableData = props.tableData;\n    for (let speciesGroup in tableData) {\n      speciesTables.push(\n        <div className=\"tables-container\" key={speciesGroup}>\n          <div className=\"tables-header\">\n            <div className=\"tables-header-spacer\"></div>\n\n            <LinkButton\n              to=\"/kits\"\n              className=\"species-name\"\n              onClick={() => props.selectSpecies(speciesGroup)}\n            >\n              {speciesGroup}\n            </LinkButton>\n\n            <button\n              className=\"delete-button delete-species no-print-spacer\"\n              onClick={() =>\n                props.handleTableDeleteButton(\"species\", speciesGroup)\n              }\n            >\n              <i className=\"fas fa-trash-alt\"></i>\n            </button>\n          </div>\n          {/* generate a table for each kit in the species group */}\n          {generateKitTables(tableData[speciesGroup])}\n        </div>\n      );\n    }\n    return speciesTables;\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"scrollable-body\" id=\"divToPrint\">\n        {generateSpeciesTables()}\n      </div>\n\n      <Footer {...props} currComponent={\"Table\"} />\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\n\nconst baseURL =\n  process.env.NODE_ENV.trim() === \"development\"\n    ? \"http://localhost:8000\"\n    : undefined;\n\nconst api = axios.create({\n  withCredentials: true,\n  baseURL,\n});\n\nexport const createKit = (kitData) => api.post(`/api/kit`, kitData);\nexport const updateKitById = (id, kitData) =>\n  api.put(`/api/kit/${id}`, kitData);\nexport const deleteKitById = (id) => api.delete(`/api/kit/${id}`);\nexport const getAllKits = () => api.get(`/api/kits`);\nexport const getKitByID = (id) => api.get(`/api/kits/${id}`);\n\nexport const logIn = (loginData) => api.post(\"/api/login\", loginData);\n// export const updatePasscode = (userData) => api.put(\"/api/login\", userData);\nexport const checkLoginStatus = () => api.get(\"/api/login\");\nexport const logOut = () => api.post(\"/api/logout\");\n\nconst apis = {\n  createKit,\n  updateKitById,\n  deleteKitById,\n  getAllKits,\n  getKitByID,\n  logIn,\n  // updatePasscode,\n  checkLoginStatus,\n  logOut,\n};\n\nexport default apis;\n","//the CreateOrEdit component allows the user to create a new kit or update/delete an existing kit, depending on where they navigated from. validation checks before submission ensure that all fields are filled, IDs are not re-used, appropriate fields are capitalized, and trailing/leading whitespace is deleted. submitting a new kit or an updated kit will update the App state as well as the database.\nimport React, { Component } from \"react\";\nimport Footer from \"./Footer\";\nimport { cloneDeep } from \"lodash\";\nimport memoize from \"memoize-one\";\nimport apis from \"../api\";\nimport \"./CreateOrEdit.css\";\n\nclass CreateOrEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      name: \"\",\n      species: \"\",\n      type: \"\",\n      constants: [[null, null, null, null]],\n      duplicateID: false,\n      showAlert: false,\n      alertMsg: \"\",\n    };\n    //ref for kit type HTML input. helps clear the input's value on click, showing the user both options (\"Positive\" and \"Negative\") immediately, as opposed to only suggesting matching options\n    this.typeRef = React.createRef();\n  }\n\n  componentDidMount = async () => {\n    //if there is a kitID in the URL, we are editing a kit\n    if (this.props.match.params.kitID) {\n      this.loadKitToEdit();\n    } else {\n      //otherwise, we are creating a kit - grab any form data from localStorage\n      this.loadSavedCreateData();\n    }\n  };\n\n  /**************\n   CDM functions\n  ****************/\n  fetchKitByID = async (kitID) => {\n    console.log(\"Finding kit data based on URL...\");\n    let kit = await apis\n      .getKitByID(kitID)\n      .then((res) => {\n        return res.data.data;\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    return kit;\n  };\n\n  loadKitToEdit = async () => {\n    //grab the kit data pushed into the history object (location.state)\n    //if the user just went to the url directly, e.g., didn't click in from a kit, there is no history so query the db\n    if (this.props.location.state) {\n      await this.setState(this.props.location.state);\n    } else {\n      const kitFromDb = await this.fetchKitByID(this.props.match.params.kitID);\n\n      if (!kitFromDb) {\n        console.log(\"Kit not found based on URL......\");\n        this.props.history.push(\"/invalid\");\n        return;\n      }\n\n      await this.setState(kitFromDb);\n      console.log(\"Kit data loaded based on URL.\");\n    }\n    this.updateLocalStorage(\"update\");\n  };\n\n  loadSavedCreateData = async () => {\n    console.log(\"Fetching saved create kit data...\");\n    const localForm = JSON.parse(localStorage.getItem(\"createState\"));\n    await this.setState(localForm);\n    console.log(\"Saved create kit data loaded.\");\n  };\n\n  /**********************\n   input suggestion lists\n  ************************/\n  generateConstantsDatalists = memoize((allKits) => {\n    if (!allKits) return;\n    const constantNames = this.createUniqueElArr(allKits, 0, true),\n      constantUnits = this.createUniqueElArr(allKits, 1),\n      constantCells = this.createUniqueElArr(allKits, 3);\n    return { constantNames, constantUnits, constantCells };\n  });\n\n  createUniqueElArr = (allKits, indexToUse, appendUnits) => {\n    const allConstantGroups = allKits.reduce((finalArray, kit) => {\n      finalArray.push(...kit.constants);\n      return finalArray;\n    }, []);\n\n    const set = new Set();\n\n    for (let constantGroup of allConstantGroups) {\n      let constant = constantGroup[indexToUse];\n      if (appendUnits) {\n        constant += \" (\" + constantGroup[1] + \")\";\n      }\n      set.add(constant);\n    }\n\n    return Array.from(set).sort();\n  };\n\n  /***************\n   input handlers\n   ***************/\n  handleInputConstant = async (e, constantRow, constantType) => {\n    const constants = cloneDeep(this.state.constants);\n    switch (constantType) {\n      case \"constantName\":\n        //note that user will not be able to type \"(\".\n        const values = e.target.value.split(\"(\");\n        //if there is something on the other side of the (, the user must have selected a suggestion.\n        if (values[1]) {\n          constants[constantRow][0] = values[0].trim();\n          constants[constantRow][1] = values[1].slice(0, -1);\n        } else {\n          constants[constantRow][0] = values[0];\n        }\n        break;\n      case \"constantUnit\":\n        constants[constantRow][1] = e.target.value;\n        break;\n      case \"constantValue\":\n        constants[constantRow][2] = e.target.value;\n        break;\n      case \"constantCells\":\n        constants[constantRow][3] = e.target.value;\n        break;\n      default:\n        console.log(\"Error modifying constants.\");\n    }\n\n    await this.setState({ constants });\n    this.updateLocalStorage(\n      this.props.match.params.kitID ? \"update\" : \"create\"\n    );\n  };\n\n  handleInput = async (e) => {\n    //if modifying ID -> there should not be duplicate kit IDs\n    e.target.name === \"id\" && this.props.allKitIDs.has(e.target.value)\n      ? this.setState({ duplicateID: true })\n      : this.setState({ duplicateID: false });\n\n    await this.setState({ [e.target.name]: e.target.value });\n    this.updateLocalStorage(\n      this.props.match.params.kitID ? \"update\" : \"create\"\n    );\n  };\n\n  /***************\n   form validation\n   ***************/\n  capitalizeWords = (string) => {\n    const arrayOfWords = string.split(\" \");\n    const capitalizedArray = arrayOfWords.map((word) => {\n      return word[0].toUpperCase() + word.slice(1);\n    });\n    return capitalizedArray.join(\" \");\n  };\n\n  processFields = (name, species, constants) => {\n    const namePrepped = this.capitalizeWords(String(name).trim());\n    const speciesPrepped = this.capitalizeWords(species.trim());\n    const constantsPrepped = constants.map((constantGroup) => {\n      constantGroup = constantGroup.map((el) => el.trim());\n      constantGroup[0] = this.capitalizeWords(constantGroup[0]);\n      return constantGroup;\n    });\n    return { namePrepped, speciesPrepped, constantsPrepped };\n  };\n\n  checkForEmptyFields = (id, name, species, type, constants) => {\n    let constantsEmpty = false;\n    for (let constant of constants) {\n      if (!constant[0] || !constant[1] || !constant[2] || !constant[3])\n        constantsEmpty = true;\n    }\n    if (\n      id === \"\" ||\n      name === \"\" ||\n      species === \"\" ||\n      type === \"\" ||\n      constantsEmpty\n    ) {\n      this.setState({ alertMsg: \"emptyFields\", showAlert: true });\n      return true;\n    }\n    return false;\n  };\n\n  validateFields = () => {\n    const { id, name, species, type, constants } = cloneDeep(this.state);\n\n    if (this.checkForEmptyFields(id, name, species, type, constants))\n      return false;\n\n    const {\n      namePrepped,\n      speciesPrepped,\n      constantsPrepped,\n    } = this.processFields(name, species, constants);\n\n    return {\n      id: String(id),\n      name: namePrepped,\n      species: speciesPrepped,\n      type,\n      constants: constantsPrepped,\n    };\n  };\n\n  /***************\n   form submission\n   ***************/\n  handleSubmit = async (e, updateOrCreate) => {\n    e.preventDefault();\n    if (this.validateFields() === false) return;\n    const { id, name, species, type, constants } = this.validateFields();\n\n    if (updateOrCreate === \"update\") {\n      await apis\n        .updateKitById(id, {\n          name,\n          type,\n          constants,\n        })\n        .catch((err) => console.error(err));\n\n      if (this.props.tableData[species] && this.props.tableData[species][id]) {\n        this.props.updateTableData(\n          {\n            id,\n            name,\n            species,\n            type,\n            constants,\n          },\n          \"update\"\n        );\n      }\n      this.setState({ alertMsg: \"update\", showAlert: true });\n    } else if (updateOrCreate === \"create\") {\n      await apis\n        .createKit({\n          id,\n          name,\n          species,\n          type,\n          constants,\n        })\n        .catch((err) => console.error(err));\n      this.setState({ alertMsg: \"create\", showAlert: true });\n    }\n\n    await this.props.fetchKitsFromDatabase();\n    //update species' kits in Kits component, in case user directly goes back to Kits\n    await this.props.selectSpecies(this.props.currentSpecies);\n  };\n\n  deleteKit = async () => {\n    const { id, name, species, type, constants } = cloneDeep(this.state);\n    await apis.deleteKitById(id).catch((err) => console.error(err));\n\n    await this.props.fetchKitsFromDatabase();\n    //update species' kits in Kits component, in case user goes back\n    await this.props.selectSpecies(this.props.currentSpecies);\n\n    if (this.props.tableData[species] && this.props.tableData[species][id]) {\n      await this.props.updateTableData(\n        { id, name, species, type, constants },\n        \"delete\"\n      );\n    }\n\n    console.log(\"Kit deleted from database.\");\n  };\n\n  handleAlert = async () => {\n    const action = this.state.alertMsg;\n    //bug: if user copy/pastes the edit kit URL in a new tab, it will update the kit in db but then send the user back to the default new tab page\n    switch (action) {\n      case \"delete\":\n        await this.deleteKit();\n        this.props.history.goBack();\n        this.clearStateAndStorage();\n        break;\n      case \"update\":\n        this.props.history.goBack();\n        this.clearStateAndStorage();\n        break;\n      case \"create\":\n        this.clearStateAndStorage();\n        break;\n      default:\n        break;\n    }\n    this.setState({ showAlert: false });\n  };\n\n  /***************\n   other functions\n   ***************/\n  updateLocalStorage = (createOrUpdate) => {\n    if (createOrUpdate === \"create\")\n      localStorage.setItem(\"createState\", JSON.stringify(this.state));\n    else if (createOrUpdate === \"update\")\n      localStorage.setItem(\"updateState\", JSON.stringify(this.state));\n  };\n\n  clearStateAndStorage = () => {\n    localStorage.removeItem(\n      this.props.match.params.kitID ? \"updateState\" : \"createState\"\n    );\n    this.setState({\n      id: \"\",\n      name: \"\",\n      species: \"\",\n      type: \"\",\n      constants: [[null, null, null, null]],\n    });\n  };\n\n  modifyConstantRows = async (modification) => {\n    if (modification === \"add\")\n      await this.setState({\n        constants: [...this.state.constants, [null, null, null, null]],\n      });\n    else if (modification === \"subtract\")\n      await this.setState({ constants: this.state.constants.slice(0, -1) });\n    this.updateLocalStorage(\n      this.props.match.params.kitID ? \"update\" : \"create\"\n    );\n  };\n\n  render() {\n    const datalists = this.generateConstantsDatalists(this.props.allKits);\n    return (\n      <div className=\"page\">\n        <header>\n          <div className=\"page-title\">\n            {this.props.match.params.kitID ? (\n              <>\n                Edit{\" \"}\n                <a\n                  className=\"edit-kit-id\"\n                  href={`https://www.miltenyibiotec.com/US-en/search.html?search=${this.state.id}&options=on#globalSearchFamilies=%5B%5D`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {this.state.id}\n                </a>\n              </>\n            ) : (\n              \"Create Kit\"\n            )}\n          </div>\n        </header>\n        <form\n          className=\"create-form\"\n          autoComplete=\"off\"\n          onSubmit={(e) => {\n            this.handleSubmit(\n              e,\n              this.props.match.params.kitID ? \"update\" : \"create\"\n            );\n          }}\n        >\n          <div className=\"create-section-left\">\n            <table id=\"create-edit-table\">\n              <tbody>\n                <tr>\n                  <td className=\"create-form-label\" align=\"right\">\n                    ID\n                  </td>\n                  <td align=\"left\" colSpan={2}>\n                    <input\n                      type=\"text\"\n                      value={this.state.id}\n                      disabled={this.props.match.params.kitID ? true : false}\n                      name=\"id\"\n                      placeholder=\"000-000-000\"\n                      onChange={this.handleInput}\n                      className={\n                        this.state.duplicateID && !this.props.match.params.kitID\n                          ? \"form-top-input error\"\n                          : \"form-top-input\"\n                      }\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"create-form-label\" align=\"right\">\n                    Name\n                  </td>\n                  <td align=\"left\" colSpan={2}>\n                    <input\n                      className=\"form-top-input\"\n                      type=\"text\"\n                      value={this.state.name}\n                      name=\"name\"\n                      placeholder=\"CD000 Isolation Kit\"\n                      onChange={this.handleInput}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"create-form-label\" align=\"right\">\n                    Species\n                  </td>\n                  <td align=\"left\" colSpan={2}>\n                    <input\n                      className=\"form-top-input\"\n                      type=\"text\"\n                      disabled={this.props.match.params.kitID ? true : false}\n                      list=\"species-choices\"\n                      name=\"species\"\n                      onChange={this.handleInput}\n                      value={this.state.species}\n                      placeholder=\"Dragon\"\n                    />\n                    <datalist id=\"species-choices\">\n                      {this.props.allSpecies.map((species) => (\n                        <option key={species}>{species}</option>\n                      ))}\n                    </datalist>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"create-form-label\" align=\"right\">\n                    Selection\n                  </td>\n                  <td align=\"left\" colSpan={2}>\n                    <input\n                      className=\"form-top-input select-type\"\n                      type=\"text\"\n                      list=\"type-choices\"\n                      name=\"type\"\n                      onKeyDown={(e) => {\n                        e.preventDefault();\n                      }}\n                      ref={this.typeRef}\n                      onMouseDown={() => {\n                        this.typeRef.current.value = \"\";\n                        this.setState({ type: \"\" });\n                      }}\n                      onChange={this.handleInput}\n                      value={this.state.type}\n                      placeholder=\"Select one:\"\n                    />\n                    <datalist id=\"type-choices\">\n                      <option value=\"Positive\">Positive</option>\n                      <option value=\"Negative\">Negative</option>\n                    </datalist>\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"constants-header\" colSpan={3}>\n                    Constants\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <div className=\"scrollable-body table-of-constants-container\">\n              <table className=\"table-of-constants\">\n                <thead className=\"toc-head\">\n                  <tr className=\"toc-header\">\n                    <th className=\"toc-name-col create-form-label\">Name</th>\n                    <th className=\"create-form-label\">Units</th>\n                    <th className=\"create-form-label\">Constant</th>\n                    <th className=\"toc-cells-col create-form-label\">Cells</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.constants.map((constantRow, idx) => (\n                    <tr key={idx}>\n                      <td>\n                        <input\n                          className=\"form-bottom-input\"\n                          type=\"text\"\n                          list=\"constants-names\"\n                          onChange={(e) => {\n                            this.handleInputConstant(e, idx, \"constantName\");\n                          }}\n                          value={constantRow[0] || \"\"}\n                          placeholder=\"Fireball Cocktail\"\n                        />\n                        <datalist id=\"constants-names\">\n                          {datalists.constantNames.map((nameAndUnits) => (\n                            <option key={nameAndUnits}>{nameAndUnits}</option>\n                          ))}\n                        </datalist>\n                      </td>\n\n                      <td>\n                        <input\n                          className=\"form-bottom-input\"\n                          type=\"text\"\n                          list=\"units\"\n                          onChange={(e) => {\n                            this.handleInputConstant(e, idx, \"constantUnit\");\n                          }}\n                          value={constantRow[1] || \"\"}\n                          placeholder=\"cups\"\n                        />\n                        <datalist id=\"units\">\n                          {datalists.constantUnits.map((unit) => (\n                            <option key={unit}>{unit}</option>\n                          ))}\n                        </datalist>\n                      </td>\n\n                      <td>\n                        <input\n                          className=\"form-bottom-input\"\n                          type=\"text\"\n                          onChange={(e) => {\n                            this.handleInputConstant(e, idx, \"constantValue\");\n                          }}\n                          value={constantRow[2] || \"\"}\n                          placeholder=\"000\"\n                        />\n                      </td>\n                      <td>\n                        <input\n                          className=\"form-bottom-input\"\n                          type=\"text\"\n                          list=\"cells\"\n                          onChange={(e) => {\n                            this.handleInputConstant(e, idx, \"constantCells\");\n                          }}\n                          value={constantRow[3] || \"\"}\n                          placeholder=\"10^00\"\n                        />\n                        <datalist id=\"cells\">\n                          {datalists.constantCells.map((cells) => (\n                            <option key={cells}>{cells}</option>\n                          ))}\n                        </datalist>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n\n            <div className=\"create-add-subtract-container\">\n              <button\n                className=\"create-add-subtract-row-button create-add-button\"\n                type=\"button\"\n                onClick={() => this.modifyConstantRows(\"add\")}\n              >\n                Add Row\n              </button>\n              <button\n                className=\"create-add-subtract-row-button create-subtract-button\"\n                type=\"button\"\n                onClick={() => this.modifyConstantRows(\"subtract\")}\n              >\n                Remove Row\n              </button>\n            </div>\n          </div>\n          <div className=\"create-section-right\">\n            <button\n              className=\"create-master-button create-clear-button\"\n              type=\"button\"\n              onClick={this.clearStateAndStorage}\n            >\n              Clear All\n            </button>\n            <input\n              className=\"create-master-button create-create-update-button hover-pointer\"\n              type=\"submit\"\n              value={\n                this.props.match.params.kitID ? \"Update Kit\" : \"Create Kit\"\n              }\n            />\n            {/* only show delete button if editing a kit */}\n            {this.props.match.params.kitID ? (\n              <button\n                className=\"create-master-button create-delete-button\"\n                type=\"button\"\n                onClick={() => {\n                  this.setState({ alertMsg: \"delete\", showAlert: true });\n                }}\n              >\n                Delete Kit\n              </button>\n            ) : null}\n          </div>\n        </form>\n\n        <div\n          className={\n            this.state.alertMsg !== \"delete\" && this.state.showAlert\n              ? \"alert-box\"\n              : \"alert-box-hidden\"\n          }\n        >\n          <div className=\"alert-text\">\n            {this.state.alertMsg === \"emptyFields\"\n              ? \"All fields must be filled.\"\n              : this.state.alertMsg === \"update\"\n              ? \"Isolation kit updated.\"\n              : \"New isolation kit created.\"}\n          </div>\n          <button className=\"alert-button\" onClick={this.handleAlert}>\n            OK\n          </button>\n        </div>\n\n        <div\n          className={\n            this.state.alertMsg === \"delete\" && this.state.showAlert\n              ? \"alert-box alert-delete\"\n              : \"alert-box-hidden alert-delete\"\n          }\n        >\n          <div className=\"alert-text\">\n            Permanently delete\n            <br /> this isolation kit?\n          </div>\n          <div className=\"alert-button-container\">\n            <button\n              className=\"alert-button alert-button-cancel\"\n              onClick={() => this.setState({ showAlert: false })}\n            >\n              Cancel\n            </button>\n            <button\n              className=\"alert-button alert-button-delete\"\n              onClick={this.handleAlert}\n            >\n              DELETE\n            </button>\n          </div>\n        </div>\n\n        <Footer {...this.props} currComponent={\"CreateOrEdit\"} />\n      </div>\n    );\n  }\n}\n\nexport default CreateOrEdit;\n","//the Error component renders whenever the logged-out user tries to access CreateOrEdit.\nimport React from \"react\";\nimport Footer from \"./Footer\";\nimport \"./Error.css\";\n\nconst Error = (props) => {\n  return (\n    <div className=\"page\">\n      <div className=\"error-container\">\n        <div className=\"lock-icon\">\n          <div className=\"lock-loop\"></div>\n          <div className=\"lock-body\">\n            <div className=\"lock-hole-top\"></div>\n            <div className=\"lock-hole-bottom\"></div>\n          </div>\n        </div>\n\n        <div className=\"error-text\">Please log in for full access.</div>\n      </div>\n\n      <Footer {...props} currComponent={\"Error\"} />\n    </div>\n  );\n};\n\nexport default Error;\n","//the PrivateRoute component wraps the CreateOrEdit component and verifies that the user is logged in before rendering CreateOrEdit. if not logged in, the user is shown the Error component.\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Error from \"./Error\";\n\nconst PrivateRoute = ({\n  component: PrivateComponent,\n  path,\n  loggedIn,\n  ...rest\n}) => {\n  return (\n    <Route\n      path={path}\n      render={(props) =>\n        loggedIn ? (\n          <PrivateComponent {...props} {...rest} />\n        ) : (\n          <Error {...props} {...rest} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","//the Login component persists at the top of the app. the user can enter the lab password and change access from 'visitor' to 'full access', which will allow rendering/use of 'edit' and 'create' kit buttons.\nimport React, { Component } from \"react\";\nimport apis from \"../api\";\nimport \"./Login.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"labmin\",\n      password: \"\",\n      passwordPlaceholder: \"\",\n      // newPassword: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e, action) => {\n    e.preventDefault();\n    if (action === \"login\") {\n      this.logIn();\n    } else if (action === \"logout\") {\n      this.logOut();\n    }\n  };\n\n  logIn = () => {\n    if (this.state.password === \"\")\n      return this.setState({\n        passwordPlaceholder: \"Please type a password\",\n      });\n\n    apis\n      .logIn({\n        username: this.state.username,\n        password: this.state.password,\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          // update App.js state so user is logged in everywhere\n          this.props.setLoggedInStatus(true);\n          this.setState({ password: \"\", passwordPlaceholder: \"\" });\n          console.log(\"Logged in.\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Login error:\", error);\n        this.setState({\n          password: \"\",\n          passwordPlaceholder: \"Wrong password\",\n        });\n      });\n  };\n\n  logOut = () => {\n    apis\n      .logOut()\n      .then((response) => {\n        if (response.status === 200) {\n          // update App.js state so user is logged out everywhere\n          this.props.setLoggedInStatus(false);\n          console.log(\"Logged out.\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Login error: \");\n        console.log(error);\n      });\n  };\n\n  //toggle this function and the div in render, to update password\n  /*\n  handleUpdate = () => {\n    apis\n      .updatePasscode({\n        username: this.state.username,\n        newPasscode: this.state.newPassword,\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(\"Updated password.\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Update error: \");\n        console.log(error);\n      });\n  };\n  // */\n\n  render() {\n    return (\n      <div className=\"login-container\">\n        <div className=\"login-mode\">\n          {this.props.loggedIn ? \"Full Access\" : \"Visitor\"}\n        </div>\n        {/* <div>\n          <input onChange={this.handleChange} name=\"newPassword\"></input>\n          <button onClick={this.handleUpdate}>update</button>\n        </div> */}\n        <div className=\"login-input-container\">\n          <input\n            className=\"login-input\"\n            onChange={this.handleChange}\n            name=\"password\"\n            autoComplete=\"off\"\n            value={this.state.password}\n            placeholder={this.state.passwordPlaceholder}\n          ></input>\n          <button\n            className={\n              this.props.loggedIn\n                ? \"login-button logged-in-button\"\n                : \"login-button logged-out-button\"\n            }\n            onClick={(e) => {\n              this.handleSubmit(e, this.props.loggedIn ? \"logout\" : \"login\");\n            }}\n          >\n            {this.props.loggedIn ? \"Log Out\" : \"Log In\"}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","//the Invalid component is shown whenever an invalid URL is accessed, or when the user types in the URL to edit a kit that doesn't exist.\nimport React from \"react\";\nimport Footer from \"./Footer\";\nimport \"./Invalid.css\";\n\nconst Invalid = (props) => {\n  return (\n    <div className=\"page\">\n      <div className=\"invalid-container\">\n        <div className=\"search-icon\">\n          <div className=\"search-head\"></div>\n          <div className=\"search-neck\"></div>\n          <div className=\"search-handle\"></div>\n        </div>\n\n        <div className=\"error-text invalid-text\">Page could not be found.</div>\n      </div>\n\n      <Footer {...props} currComponent={\"Error\"} />\n    </div>\n  );\n};\n\nexport default Invalid;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { cloneDeep } from \"lodash\";\nimport {\n  Home,\n  Kits,\n  CreateOrEdit,\n  Table,\n  PrivateRoute,\n  Login,\n  Invalid,\n} from \"./components\";\nimport apis from \"./api\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedIn: false,\n      allKits: [],\n      rowCount: 0,\n      currentSpecies: \"\",\n      currentPosKits: [],\n      currentNegKits: [],\n      tableData: {},\n      allSpecies: [], //for listing species on Home, & creating kit datalist\n      allKitIDs: {}, //for creating kit, checking if ID already exists\n    };\n  }\n\n  componentDidMount = async () => {\n    this.fetchLocalStorage();\n    this.fetchKitsFromDatabase();\n    this.getUser();\n  };\n\n  /**************\n   CDM functions\n  ****************/\n  fetchLocalStorage = async () => {\n    console.log(\"Fetching state from local storage...\");\n\n    const localState = JSON.parse(localStorage.getItem(\"appState\"));\n    if (localState) {\n      // do not need to store/fetch allKits or allSpecies, those can change in db\n      const {\n        rowCount,\n        currentSpecies,\n        currentPosKits,\n        currentNegKits,\n        tableData,\n      } = localState;\n      await this.setState({\n        rowCount,\n        currentSpecies,\n        currentPosKits,\n        currentNegKits,\n        tableData,\n      });\n    }\n    console.log(\"State loaded.\");\n  };\n\n  fetchKitsFromDatabase = async () => {\n    console.log(\"Fetching kits from database...\");\n    const responseData = await apis\n      .getAllKits()\n      .then((res) => res.data.data)\n      .catch((err) => console.error(err));\n\n    const allKits = [];\n    for (let kit of responseData) {\n      //only grab the fields needed, excluding timestamps and db indices\n      const { id, name, species, type, constants } = kit;\n      allKits.push({\n        id,\n        name,\n        species,\n        type,\n        constants,\n      });\n    }\n\n    const allSpeciesSet = this.extractUniqueProps(allKits, \"species\");\n    const allSpecies = Array.from(allSpeciesSet).sort();\n\n    const allKitIDs = this.extractUniqueProps(allKits, \"id\");\n\n    await this.setState({ allKits, allSpecies, allKitIDs });\n    console.log(\"All kits loaded.\");\n  };\n\n  extractUniqueProps = (allKits, prop) => {\n    const set = new Set();\n    for (let kit of allKits) {\n      set.add(kit[prop]);\n    }\n    return set;\n  };\n\n  getUser = () => {\n    apis\n      .checkLoginStatus()\n      .then((response) => {\n        if (response.data.user) {\n          console.log(\"Existing session; logged in.\");\n          this.setState({\n            loggedIn: true,\n          });\n        } else {\n          console.log(\"No existing session.\");\n          this.setState({\n            loggedIn: false,\n          });\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  /**************\n   Kits component\n  ***************/\n  selectSpecies = async (currentSpecies) => {\n    const currentKits = this.state.allKits.filter(\n      (kit) => kit.species === currentSpecies\n    );\n    const { currentPosKits, currentNegKits } = this.sortKits(currentKits);\n    await this.setState({ currentSpecies, currentPosKits, currentNegKits });\n\n    this.updateLocalStorage();\n  };\n\n  sortKits = (currentKits) => {\n    const positiveKits = [],\n      negativeKits = [];\n\n    for (let kit of currentKits) {\n      if (kit.type === \"Positive\") positiveKits.push(kit);\n      else if (kit.type === \"Negative\") negativeKits.push(kit);\n    }\n    return { currentPosKits: positiveKits, currentNegKits: negativeKits };\n  };\n\n  /******************\n   table modification\n  *******************/\n  updateTable = async (modification, kit) => {\n    const tableData = cloneDeep(this.state.tableData);\n\n    if (modification === \"add\") {\n      this.addRowToTable(kit, tableData);\n      await this.modifyRowCount(modification);\n    } else if (modification === \"subtract\") {\n      const noKitInTable = this.subtractRowFromTable(kit, tableData);\n      if (noKitInTable) return;\n      await this.modifyRowCount(modification);\n    }\n\n    await this.setState({ tableData });\n    this.updateLocalStorage();\n  };\n\n  addRowToTable = (kit, tableData) => {\n    //consecutively move deeper into table, assigning empty obj if needed\n    tableData[kit.species] = tableData[kit.species] || {};\n    const tableSpecies = tableData[kit.species];\n\n    tableSpecies[kit.id] = tableSpecies[kit.id] || {};\n    const speciesKit = tableSpecies[kit.id];\n\n    //if the kit is not in table, add it\n    if (!Object.keys(speciesKit).length) {\n      Object.assign(speciesKit, kit);\n      speciesKit.samples = [];\n    }\n\n    //add new sample row of empty strings\n    const newSample = Array(kit.constants.length + 2).fill(\"\");\n    speciesKit.samples.push(newSample);\n  };\n\n  subtractRowFromTable = (kit, tableData) => {\n    const tableSpecies = tableData[kit.species];\n    //if the kit is not in the table, nothing to subtract\n    if (!tableSpecies || !tableSpecies[kit.id]) {\n      return true;\n    }\n\n    const kitSamples = tableSpecies[kit.id].samples;\n    kitSamples.pop();\n\n    if (!kitSamples.length) {\n      this.deleteKitFromTable(tableData, kit.species, kit.id);\n    }\n  };\n\n  //called after updating/deleting a kit\n  updateTableData = async (updatedKit, mod) => {\n    const tableData = cloneDeep(this.state.tableData);\n    if (mod === \"update\") {\n      this.updateKitInTable(updatedKit, tableData);\n      await this.setState({ tableData });\n    } else if (mod === \"delete\") {\n      await this.handleTableDeleteButton(\n        \"kit\",\n        updatedKit.species,\n        updatedKit.id\n      );\n    }\n    this.updateLocalStorage();\n  };\n\n  updateKitInTable = (updatedKit, tableData) => {\n    const { id, name, species, type, constants } = updatedKit;\n    const kit = tableData[species][id];\n    kit.name = name;\n    kit.type = type;\n    kit.constants = constants;\n\n    //recalculate the sample rows\n    for (let rowIdx in kit.samples) {\n      let row = kit.samples[rowIdx];\n      const sampleID = row[0],\n        cellCount = row[1];\n      row = [sampleID, cellCount, ...Array(constants.length).fill(\"\")];\n      this.calculateCells(row, constants, cellCount);\n      kit.samples[rowIdx] = row;\n    }\n  };\n\n  /***********\n   table input\n  ************/\n  handleTableInput = async (inputType, kit, sampleRow, input) => {\n    const tableData = cloneDeep(this.state.tableData);\n    let row = tableData[kit.species][kit.id].samples[sampleRow];\n\n    if (inputType === \"sampleID\") {\n      row[0] = input;\n    } else if (inputType === \"cellCount\") {\n      row[1] = input;\n      this.calculateCells(row, kit.constants, input);\n    }\n\n    await this.setState({ tableData });\n    this.updateLocalStorage();\n  };\n\n  calculateCells = (row, constants, cellCount) => {\n    for (let i = 2; i < row.length; i++) {\n      const currentConstant = constants[i - 2],\n        constantCellDivisor = currentConstant[3],\n        kitConstant = currentConstant[2];\n\n      //if the constant is for an incubation, a spin, or column washes, just render it\n      if (constantCellDivisor === \"n/a\") {\n        row[i] = cellCount !== \"\" ? kitConstant : \"\";\n        continue;\n      }\n\n      //otherwise, a calculation is needed\n      const calculatedVol = this.calculateVolume(\n        constantCellDivisor,\n        kitConstant,\n        cellCount\n      );\n\n      //add comma separators for visibility\n      row[i] = calculatedVol\n        ? calculatedVol.toLocaleString(\"en\", { useGrouping: true })\n        : \"\";\n    }\n  };\n\n  calculateVolume = (constantCellDivisor, kitConstant, cellCount) => {\n    const normalizedCellCount = this.normalizeCellCount(\n      constantCellDivisor,\n      cellCount\n    );\n    let finalVol = kitConstant * normalizedCellCount;\n\n    //cap the volume at 50 mL -> lab protocol\n    if (finalVol > 50000) finalVol = 50000;\n\n    //>200 uL micropipette increments are integers\n    return finalVol < 200 ? finalVol.toFixed(1) : Math.ceil(finalVol);\n  };\n\n  normalizeCellCount = (constantCellDivisor, cellCount) => {\n    //grab the exponent from the kit cell divisor and convert into powers of 10 above 10^6\n    const kitCellDivisor =\n      10 ** ((constantCellDivisor && constantCellDivisor.split(\"^\")[1]) - 6);\n    //6 corresponds to 10^6\n\n    let normalizedCellCount = cellCount / kitCellDivisor;\n\n    //if the constant is for a \"up to 10^XX\" kind of parameter, round up\n    if (constantCellDivisor.includes(\"up to\")) {\n      normalizedCellCount = Math.ceil(normalizedCellCount);\n    }\n\n    return normalizedCellCount;\n  };\n\n  /**************\n   table deleting\n  ***************/\n  handleTableDeleteButton = async (speciesOrKit, species, kitID) => {\n    let rowCount = this.state.rowCount;\n    const tableData = cloneDeep(this.state.tableData);\n\n    if (speciesOrKit === \"species\") {\n      rowCount = this.deleteSpeciesFromTable(tableData, species, rowCount);\n    } else if (speciesOrKit === \"kit\") {\n      rowCount = this.deleteKitFromTable(tableData, species, kitID, rowCount);\n    }\n\n    await this.setState({\n      rowCount,\n      tableData,\n    });\n    this.updateLocalStorage();\n  };\n\n  deleteSpeciesFromTable = (tableData, species, rowCount) => {\n    const kits = tableData[species];\n    for (let kitID in kits) {\n      rowCount -= kits[kitID].samples.length;\n    }\n\n    delete tableData[species];\n\n    return rowCount;\n  };\n\n  deleteKitFromTable = (tableData, species, kitID, rowCount) => {\n    if (rowCount) {\n      rowCount -= tableData[species][kitID].samples.length;\n    }\n\n    delete tableData[species][kitID];\n\n    //if there are no more kits for a species, delete species\n    if (!Object.keys(tableData[species]).length) {\n      delete tableData[species];\n    }\n\n    return rowCount;\n  };\n\n  clearTable = async () => {\n    await this.setState({\n      rowCount: 0,\n      tableData: {},\n    });\n    this.updateLocalStorage();\n  };\n\n  /***************\n   other functions\n   ***************/\n  setLoggedInStatus = (bool) => {\n    this.setState({ loggedIn: bool });\n  };\n\n  updateLocalStorage = () => {\n    const {\n      rowCount,\n      currentSpecies,\n      currentPosKits,\n      currentNegKits,\n      tableData,\n    } = this.state;\n    localStorage.setItem(\n      \"appState\",\n      JSON.stringify({\n        rowCount,\n        currentSpecies,\n        currentPosKits,\n        currentNegKits,\n        tableData,\n      })\n    );\n  };\n\n  modifyRowCount = (modification) => {\n    if (modification === \"add\")\n      this.setState({ rowCount: this.state.rowCount + 1 });\n    else if (modification === \"subtract\")\n      this.setState({ rowCount: this.state.rowCount - 1 });\n  };\n\n  render() {\n    return (\n      <Router className=\"main\">\n        <Login\n          loggedIn={this.state.loggedIn}\n          setLoggedInStatus={this.setLoggedInStatus}\n        />\n        <Switch>\n          <Route\n            path=\"/kits\"\n            render={(props) => (\n              <Kits\n                {...props}\n                loggedIn={this.state.loggedIn}\n                currentSpecies={this.state.currentSpecies}\n                currentPosKits={this.state.currentPosKits}\n                currentNegKits={this.state.currentNegKits}\n                rowCount={this.state.rowCount}\n                tableData={this.state.tableData}\n                updateTable={this.updateTable}\n              />\n            )}\n          ></Route>\n\n          <PrivateRoute\n            path={[\"/edit/:kitID\", \"/create\"]}\n            component={CreateOrEdit}\n            loggedIn={this.state.loggedIn}\n            allKits={this.state.allKits}\n            rowCount={this.state.rowCount}\n            allKitIDs={this.state.allKitIDs}\n            currentSpecies={this.state.currentSpecies}\n            allSpecies={this.state.allSpecies}\n            tableData={this.state.tableData}\n            fetchKitsFromDatabase={this.fetchKitsFromDatabase}\n            selectSpecies={this.selectSpecies}\n            updateTableData={this.updateTableData}\n          ></PrivateRoute>\n\n          <Route\n            path=\"/table\"\n            render={(props) => (\n              <Table\n                {...props}\n                loggedIn={this.state.loggedIn}\n                tableData={this.state.tableData}\n                selectSpecies={this.selectSpecies}\n                updateTable={this.updateTable}\n                handleTableInput={this.handleTableInput}\n                handleTableDeleteButton={this.handleTableDeleteButton}\n                clearTable={this.clearTable}\n              />\n            )}\n          ></Route>\n\n          <Route\n            path=\"/\"\n            exact={true}\n            render={(props) => (\n              <Home\n                {...props}\n                loggedIn={this.state.loggedIn}\n                rowCount={this.state.rowCount}\n                allSpecies={this.state.allSpecies}\n                selectSpecies={this.selectSpecies}\n              />\n            )}\n          ></Route>\n\n          <Route\n            path=\"/invalid\"\n            render={(props) => (\n              <Invalid {...props} rowCount={this.state.rowCount} />\n            )}\n          ></Route>\n\n          <Route\n            path=\"/\"\n            render={(props) => (\n              <Invalid {...props} rowCount={this.state.rowCount} />\n            )}\n          ></Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n/*\nDATA STRUCTURES EXAMPLES:\n\nkit = {\n  id: \"130-096-537\",\n  name: \"Pan Monocyte Isolation Kit\",\n  species: \"Human\",\n  type: \"Negative\",\n  constants: [\n    [\"Buffer\", \"µL\", \"40\", \"10^7\"],\n    [\"FcR Blocking Reagent\", \"µL\", \"10\", \"10^7\"],\n    [\"Biotin-Antibody Cocktail\", \"µL\", \"10\", \"10^7\"],\n    [\"Incubation\", \"min\", \"5\", \"n/a\"],\n    etc...\n  ],\n};\n\ntableData = {\n  Human: {\n    \"130-096-537\": {\n      id: \"130-096-537\",\n      name: \"Pan Monocyte Isolation Kit\",\n      species: \"Human\",\n      type: \"Negative\",\n      constants: [\n        [\"Buffer\", \"µL\", \"40\", \"10^7\"],\n        [\"FcR Blocking Reagent\", \"µL\", \"10\", \"10^7\"],\n        [\"Biotin-Antibody Cocktail\", \"µL\", \"10\", \"10^7\"],\n        [\"Incubation\", \"min\", \"5\", \"n/a\"],\n        etc...\n      ],\n      samples: [\n        [\"sample1\", \"25.2\", \"100.8\", \"25.2\", \"25.2\", \"5\", etc...],\n        [\"sample2\", \"10\", \"40\", \"10\", \"10\", \"5\", etc...],\n      ],\n    },\n  },\n};\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}